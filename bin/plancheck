#!/usr/bin/env bash
PLAN=$1
LOCATION=$(which plancheck)
INDEX=$(echo $LOCATION |sed 's/bin\/plancheck/lib\/node\_modules\/terraform-ecs-plan-checker\/index\.js/g')
CHECK=$(terraform show "$1")

# Functions
function go () {
  if [ $(grep -q "container_definitions" "$CHECK") ]; then
        # grab the definitions from the plan
        node $INDEX --grab $PLAN

        # generate human readable json
        cat old.json |jq '.' > old
        cat new.json |jq '.' > new

        # calculate differences between both definitions
        node $INDEX --calculate $PLAN

        # clean up
        rm old.json new.json old new check 2>/dev/null
    else
        echo "ERR: Current tf-plan doesn't have any container_definition changes"
    fi
}

function usage () {
  echo "Usage: plancheck <terraform-plan>"
  echo
  echo "Options:"
  echo "  -h or --help      Display usage information"
  echo "  -v or --version   Display the current version"
}

function version () {
    version=$(node $INDEX -V)
    echo "plancheck version $version"
}

# Define the general usage of the CLI tool
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
  -h|--help|help )
    usage
    exit 0
    ;;
  -v|--version|version )
    version
    exit 0
    ;;
  *)
    go
    exit 0
    ;;
esac
done
